--Generates a list of species in our system and any breeds and colors associated with those species.
SELECT SPECIES, BREED, COLOR 

FROM UVIS_SPECIES_M species, UVIS_BREEDS_M breeds, UVIS_COLORS_M colors

WHERE species.SPECIES_ID = breeds.SPECIES_ID AND species.SPECIES_ID = colors.SPECIES_ID AND breeds.BREED_ID = colors.BREED_ID;

--Generates a list of active users and shows what service/section they are associated with.
SELECT USERNAME, FIRST_NAME, LAST_NAME, SERVICE_NAME, SECTION_NAME FROM 

(SELECT USERNAME, FIRST_NAME, LAST_NAME, emp.SERVICE_ID, SERVICE_NAME, emp.SECTION_ID 

FROM UVIS_EMPLOYEE emp, UVIS_SERVICE_AREA_M service

WHERE emp.SERVICE_ID = service.SERVICE_ID AND emp.EMP_STATUS <> 'INACTIVE')

LEFT JOIN (SELECT SERVICE_ID AS SERVICE_ID2, SECTION_ID AS SECTION_ID2, SECTION_NAME FROM UVIS_SERVICE_AREA_SECTIONS) ON SERVICE_ID = SERVICE_ID2 AND SECTION_ID = SECTION_ID2;

--Generates a list of instructions that currently exist in our system along with the service and section they are associated with.
SELECT INSTRUCTION_ID, SERVICE_NAME, SECTION_NAME, DESCRIPTION, INSTRUCTIONS FROM 

(SELECT INSTRUCTION_ID, DESCRIPTION, INSTRUCTIONS FROM UVIS_MR_INSTRUCTION_M)

LEFT JOIN (SELECT INSTRUCTION_ID AS INSTRUCTION_ID2, SERVICE_ID, SECTION_ID FROM UVIS_MR_INST_ADDTL_INST_X) ON INSTRUCTION_ID = INSTRUCTION_ID2

LEFT JOIN (SELECT SERVICE_ID AS SERVICE_ID2, SERVICE_NAME FROM UVIS_SERVICE_AREA_M) ON SERVICE_ID = SERVICE_ID2

LEFT JOIN (SELECT SERVICE_ID AS SERVICE_ID3, SECTION_ID AS SECTION_ID2, SECTION_NAME FROM UVIS_SERVICE_AREA_SECTIONS) ON SERVICE_ID = SERVICE_ID3 AND SECTION_ID = SECTION_ID2;

--Generates a list of pick sheets with the parent service and section of each sheet and shows all the products which are currently on each sheet.
--Also shows whether each product is currently active or not.
SELECT SERVICE_NAME, SECTION_NAME, SHEET_TYPE, PICK_CATEGORY, SHEET_TITLE, PRODUCT_LINE_ID, PRODUCT_SEQ_ID, ACTIVE_YN, LONG_DESCRIPTION FROM

(SELECT PICK_CATEGORY_ID, PRODUCT_LINE_ID, PRODUCT_SEQ_ID FROM UVIS_PICK_SHEET)

LEFT JOIN (SELECT PICK_CATEGORY_ID AS PICK_CATEGORY_ID2, PICK_CATEGORY, SHEET_TITLE_ID FROM UVIS_PICK_CATEGORY_M) ON PICK_CATEGORY_ID = PICK_CATEGORY_ID2

LEFT JOIN (SELECT SHEET_TITLE_ID AS SHEET_TITLE_ID2, SHEET_TITLE, SHEET_TYPE, PARENT_SERVICE_ID AS SERVICE_ID, PARENT_SECTION_ID AS SECTION_ID FROM UVIS_PICK_SHEET_TITLE_M) ON SHEET_TITLE_ID = SHEET_TITLE_ID2

LEFT JOIN (SELECT SERVICE_ID AS SERVICE_ID2, SERVICE_NAME FROM UVIS_SERVICE_AREA_M) ON SERVICE_ID = SERVICE_ID2

LEFT JOIN (SELECT SERVICE_ID AS SERVICE_ID3, SECTION_ID AS SECTION_ID2, SECTION_NAME FROM UVIS_SERVICE_AREA_SECTIONS) ON SERVICE_ID = SERVICE_ID3 AND SECTION_ID = SECTION_ID2

LEFT JOIN (SELECT PRODUCT_LINE_ID AS PRODUCT_LINE_ID2, PRODUCT_SEQ_ID AS PRODUCT_SEQ_ID2, LONG_DESCRIPTION, ACTIVE_YN FROM UVIS_PRODUCT) ON PRODUCT_LINE_ID = PRODUCT_LINE_ID2 AND PRODUCT_SEQ_ID = PRODUCT_SEQ_ID2;

--Shows a list of Diagnoses in our system, whether each diagnosis is active or not, and how many times each diagnosis has been used in the last 5 years.
SELECT DIAGNOSIS_ID, TIMES_USED, DIAGNOSIS, ACTIVE_YN, STANDARD_CODE FROM

(SELECT DIAGNOSIS_ID, DIAGNOSIS, STANDARD_CODE, ACTIVE_YN FROM UVIS_PRIMARY_DIAGNOSIS_M)

LEFT JOIN (SELECT DIAGNOSIS_ID AS DIAGNOSIS_ID2, COUNT(EPISODE_ID) AS TIMES_USED FROM UVIS_MR_DIAGNOSIS WHERE APPROVAL_DATETIME BETWEEN '1-JAN-10' AND sysdate GROUP BY DIAGNOSIS_ID) ON DIAGNOSIS_ID = DIAGNOSIS_ID2;
