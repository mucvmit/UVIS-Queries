--This query finds orders where a general necropsy code (900-30) was present.
--It then checks to see if any of several disposal codes are present, such as 900-20, 900-14, 900-2810, 905-2400, 490-600, 590-100, and 670-500.
--It also shows the total that was charged on the lab side, as well as the admitting and requesting service and sections.

SELECT ORDER_ID, ORDER_ID_SUFFIX, REQUEST_ID, PRODUCT_LINE_ID, PRODUCT_SEQ_ID, ORDER_ITEM_STATUS, ITEM_TOTAL_AMT, ORDER_ITEM_SEQ_ID, SHORT_DESCRIPTION, LAB_CHARGES, ACCESSION_NO, ADMITTING_SERVICE, ADMITTING_SECTION, REQUESTING_SERVICE, REQUESTING_SECTION

FROM (SELECT DISTINCT dtl.ORDER_ID, dtl.ORDER_ID_SUFFIX, items.REQUEST_ID, req.REQUESTING_DVM_ID FROM UVIS_ORDER_DTL dtl, UVIS_MR_REQUEST req, UVIS_MR_REQUEST_ITEMS items WHERE dtl.PRODUCT_LINE_ID = '900' AND dtl.PRODUCT_SEQ_ID = '30' AND dtl.ORDER_ITEM_DATETIME BETWEEN :p_start_date AND :p_end_date AND dtl.ORDER_ID = req.EPISODE_ID AND req.REQUEST_ID = items.REQUEST_ID AND items.PRODUCT_LINE_ID = dtl.PRODUCT_LINE_ID AND items.PRODUCT_SEQ_ID = dtl.PRODUCT_SEQ_ID AND dtl.ITEM_ID = req.REQUEST_ID)

LEFT JOIN (SELECT dtl.ORDER_ID AS ORDER_ID2, dtl.ORDER_ID_SUFFIX AS ORDER_ID_SUFFIX3, dtl.PRODUCT_LINE_ID, dtl.PRODUCT_SEQ_ID, dtl.ORDER_ITEM_STATUS, dtl.ITEM_TOTAL_AMT, dtl.ORDER_ITEM_SEQ_ID FROM UVIS_ORDER_DTL dtl WHERE (dtl.PRODUCT_LINE_ID = 900 AND dtl.PRODUCT_SEQ_ID = 20) OR (dtl.PRODUCT_LINE_ID = 900 AND dtl.PRODUCT_SEQ_ID = 2810) OR (dtl.PRODUCT_LINE_ID = 900 AND dtl.PRODUCT_SEQ_ID = 14) OR (dtl.PRODUCT_LINE_ID = 905 AND dtl.PRODUCT_SEQ_ID = 2400) OR (dtl.PRODUCT_LINE_ID = 490 AND dtl.PRODUCT_SEQ_ID = 600) OR (dtl.PRODUCT_LINE_ID = 590 AND dtl.PRODUCT_SEQ_ID = 100) OR (dtl.PRODUCT_LINE_ID = 670 AND dtl.PRODUCT_SEQ_ID = 500)) ON ORDER_ID = ORDER_ID2 AND ORDER_ID_SUFFIX = ORDER_ID_SUFFIX3

LEFT JOIN (SELECT prod.SHORT_DESCRIPTION, prod.PRODUCT_LINE_ID AS PRODUCT_LINE_ID2, prod.PRODUCT_SEQ_ID AS PRODUCT_SEQ_ID2 FROM UVIS_PRODUCT prod) ON PRODUCT_LINE_ID = PRODUCT_LINE_ID2 AND PRODUCT_SEQ_ID = PRODUCT_SEQ_ID2

LEFT JOIN (SELECT DISTINCT SUM(eod.CHARGE_AMT) AS LAB_CHARGES, dlr.REQUEST_ID_SOURCE, acc.ACCESSION_NO, acc.ACCESSION_ID FROM UVIS_DL_REQUEST_ACCESSION_X@uvisdlab dlr, UVIS_DL_EOD_CHARGES@uvisdlab eod, UVIS_DL_ACCESSIONS@uvisdlab acc WHERE dlr.ACCESSION_ID = eod.ACCESSION_ID AND acc.ACCESSION_ID = dlr.ACCESSION_ID GROUP BY dlr.REQUEST_ID_SOURCE, acc.ACCESSION_NO, acc.ACCESSION_ID) ON REQUEST_ID = REQUEST_ID_SOURCE

INNER JOIN (SELECT ADMITTING_SECTION_ID, ADMITTING_SERVICE_ID, ORDER_ID AS ORDER_ID3, ORDER_ID_SUFFIX AS ORDER_ID_SUFFIX2 FROM UVIS_ORDER_HDR) ON ORDER_ID = ORDER_ID3 AND ORDER_ID_SUFFIX = ORDER_ID_SUFFIX2

INNER JOIN (SELECT EMP_ID, SECTION_ID AS REQUESTING_SECTION_ID, SERVICE_ID AS REQUESTING_SERVICE_ID FROM UVIS_EMPLOYEE) ON EMP_ID = REQUESTING_DVM_ID

INNER JOIN (SELECT serv.SERVICE_NAME AS admitting_service, sect.SECTION_NAME AS admitting_section, serv.SERVICE_ID, sect.SECTION_ID FROM UVIS_SERVICE_AREA_M serv, UVIS_SERVICE_AREA_SECTIONS sect WHERE serv.SERVICE_ID = sect.SERVICE_ID) ON ADMITTING_SERVICE_ID = SERVICE_ID AND ADMITTING_SECTION_ID = SECTION_ID

INNER JOIN (SELECT serv.SERVICE_NAME AS requesting_service, sect.SECTION_NAME AS requesting_section, serv.SERVICE_ID AS SERVICE_ID2, sect.SECTION_ID AS SECTION_ID2 FROM UVIS_SERVICE_AREA_M serv, UVIS_SERVICE_AREA_SECTIONS sect WHERE serv.SERVICE_ID = sect.SERVICE_ID) ON REQUESTING_SERVICE_ID = SERVICE_ID2 AND REQUESTING_SECTION_ID = SECTION_ID2 ORDER BY ORDER_ID;
